#!/bin/sh

data_dir="${XDG_DATA_HOME:-$HOME/.local/share}/ideas"
repo_file="$data_dir/repo"
auth_file="$data_dir/auth"

usage() {
    echo "usage: ideas [COMMAND] [ARGS]"
    echo
    echo "ideas"
    echo "    edit/view one of your existing ideas"
    echo
    echo "ideas NAME"
    echo "    edit/view an existing idea called NAME"
    echo
    echo "ideas add"
    echo "    create a new idea"
    echo
    echo "ideas new"
    echo "    alias for add"
    echo
    echo "ideas rm"
    echo "    delete an existing idea"
    echo
    echo "ideas auth"
    echo "    prompts you for a person access token"
    echo "    need to access your ideas repo"
    echo ""
    echo "ideas init DIRECTORY"
    echo "    set your ideas repo"
}

select_idea() {
    repo=$1
    find "$repo" -depth 1 -name "*.md" -print0 |
        xargs -n 1 -0 basename -s .md |
        fzf +m --reverse
}

rm_idea() {
    repo=$(get_repo) || return 1

    prev_dir=$(pwd)
    cd "$repo" || return 2
    git pull -q

    idea=$(select_idea "$repo")
    [ ! "$idea" ] && return
    idea_file="$repo/$idea.md"

    printf "delete %s? (y/n): " "$idea"
    read -r confirm
    [ "$confirm" = y ] &&
        echo "deleting $idea" >&2 &&
        rm "$idea_file" &&
        sed -n -i "" -e "/^- \[$idea\]($idea.md)$/!p" README.md &&
        git add README.md "$idea_file" &&
        git commit -q -m "removed $idea" &&
        git push -q &&
        echo "done" >&2

    cd "$prev_dir" || return 2
}

add_idea() {
    repo=$(get_repo) || return 1
    printf "idea name: "
    read -r idea

    prev_dir=$(pwd)
    cd "$repo" || return 2
    git pull -q

    idea_file="$repo/$idea.md"
    [ -e "$idea_file" ] && echo "$idea_file already exists" >&2 && return 1

    echo "- [$idea]($idea.md)" >> "$repo/README.md"
    printf "## %s\n\n" "$idea" > "$idea_file"
    ${EDITOR:-vi} "$idea_file"
    git add README.md "$idea_file" && git commit -q -m "added $idea" && git push -q &

    cd "$prev_dir" || return 2
}

set_auth() {
    echo "enter a personal access token"
    printf "token: "
    read -r token

    [ ! "$token" ] && { echo "invalid token" >&2; return 1; }
    [ ! -d "$data_dir" ] && mkdir -p "$data_dir"
    echo "$token" | base64 > "$auth_file" && echo "done"
}

get_repo() {
    [ ! -e "$repo_file" ] &&
        echo "you need to set a repo with ideas init REPO" >&2 && return 1
    cat "$repo_file"
}

set_repo() {
    repo=$1

    [ ! "$repo" ] && echo "you must specify a repo" >&2 && return 1
    [ ! -d "$repo" ] && echo "$repo doesn't exist" >&2 && return 1
    [ ! -e "$repo/.git" ] && echo "$repo isn't a git repo" >&2 && return 1
    [ "$(echo "$repo" | cut -c 1)" != / ] &&
        echo "you must give an absolute path" >&2 && return 1
    [ ! -d "$data_dir" ] && mkdir -p "$data_dir"

    echo "$repo" > "$repo_file"
}

[ "$1" = "add"    ] && { add_idea;      exit; }
[ "$1" = "new"    ] && { add_idea;      exit; }
[ "$1" = "rm"     ] && { rm_idea;       exit; }
[ "$1" = "init"   ] && { set_repo "$2"; exit; }
[ "$1" = "-h"     ] && { usage;         exit; }
[ "$1" = "--help" ] && { usage;         exit; }

repo=$(get_repo) || exit 1

prev_dir=$(pwd)
cd "$repo" || exit 2

idea=$1
# [ "$idea" ] && git pull -q
# [ ! "$idea" ] && { git pull -q & } && idea=$(select_idea "$repo")
git pull -q
[ ! "$idea" ] && idea=$(select_idea "$repo")
[ ! "$idea" ] && exit

idea_file="$repo/$idea.md"
[ ! -e "$idea_file" ] && echo "$idea_file doesn't exist" >&2 && exit 1

prev_mod=$(stat -qf "%Sc" "$idea_file")
${EDITOR:-vi} "$idea_file"

[ "$prev_mod" != "$(stat -qf "%Sc" "$idea_file")" ] &&
    git add "$idea_file" && git commit -q -m "modified $idea" && git push -q &

cd "$prev_dir" || exit 2
